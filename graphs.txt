1.undirected and unweighted:
def addnode(v):
    global n
    if v in nodes:
        print(v,"node is existed")
    else:
        nodes.append(v)
        n=n+1 
        for x in graph:
            x.append(0)
        temp=[]
        for i in range(n):
            temp.append(0)
            graph.append(temp)
def show():
    for i in range(n):
        for j in range(n):
            print(graph[i][j],end=" ")
        print()
def addedge(node1,node2):
    if node1 not in nodes:
        print(node1,"is not availabe in graph")
    elif node2 not in nodes:
        print(node2," is not available in graph")
    else:
        i=nodes.index(node1)
        j=nodes.index(node2)
        graph[i][j]=1
        graph[i][j]=1
        
nodes=[]
graph=[]
n=0
while True:
    print()
    print("1.addnode\n2.addedge\n3.printgraph\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        v=input("enter node")
        addnode(v)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        addedge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")
2.directed and unweighted
def addnode(v):
    global n
    if v in nodes:
        print(v,"node is existed")
    else:
        nodes.append(v)
        n=n+1 
        for x in graph:
            x.append(0)
        temp=[]
        for i in range(n):
            temp.append(0)
            graph.append(temp)
def show():
    for i in range(n):
        for j in range(n):
            print(graph[i][j],end=" ")
        print()
def addedge(node1,node2):
    if node1 not in nodes:
        print(node1,"is not availabe in graph")
    elif node2 not in nodes:
        print(node2," is not available in graph")
    else:
        i=nodes.index(node1)
        j=nodes.index(node2)
        graph[i][j]=1
        
nodes=[]
graph=[]
n=0
while True:
    print()
    print("1.addnode\n2.addedge\n3.printgraph\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        v=input("enter node")
        addnode(v)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        
        addedge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")
        


3.  directed and weighted:      
def addnode(v):
    global n
    if v in nodes:
        print(v,"node is existed")
    else:
        nodes.append(v)
        n=n+1 
        for x in graph:
            x.append(0)
        temp=[]
        for i in range(n):
            temp.append(0)
            graph.append(temp)
def show():
    for i in range(n):
        for j in range(n):
            print(graph[i][j],end=" ")
        print()
def addedge(node1,node2):
    if node1 not in nodes:
        print(node1,"is not availabe in graph")
    elif node2 not in nodes:
        print(node2," is not available in graph")
    else:
        i=nodes.index(node1)
        j=nodes.index(node2)
        graph[i][j]=w
        
nodes=[]
graph=[]
n=0
while True:
    print()
    print("1.addnode\n2.addedge\n3.printgraph\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        v=input("enter node")
        addnode(v)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        w=int(input("enter weight"))
        addedge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")
4.
undirected weighted:


def addnode(v):
    global n
    if v in nodes:
        print(v,"node is existed")
    else:
        nodes.append(v)
        n=n+1 
        for x in graph:
            x.append(0)
        temp=[]
        for i in range(n):
            temp.append(0)
            graph.append(temp)
def show():
    for i in range(n):
        for j in range(n):
            print(graph[i][j],end=" ")
        print()
def addedge(node1,node2):
    if node1 not in nodes:
        print(node1,"is not availabe in graph")
    elif node2 not in nodes:
        print(node2," is not available in graph")
    else:
        i=nodes.index(node1)
        j=nodes.index(node2)
        graph[i][j]=w
        graph[j][i]=w
nodes=[]
graph=[]
n=0
while True:
    print()
    print("1.addnode\n2.addedge\n3.printgraph\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        v=input("enter node")
        addnode(v)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        w=int(input("enter weight"))
        addedge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")
5.undirected and unweighted using list:
def addnode(v):
    global n
    if v in graph:
        print(v,"node is existed")
    else:
        graph[v]=[]
def show():
    for x in graph:
        print(x,":",graph[x])
def addedge(node1,node2):
    if node1 not in graph:
        print(node1,"is not availabe in graph")
    elif node2 not in graph:
        print(node2," is not available in graph")
    else:
         graph[node1].append(node2)
         graph[node2].append(node1)
       
graph={}
while True:
    print()
    print("1.addnode\n2.addedge\n3.printgraph\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        v=input("enter node")
        addnode(v)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        addedge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")
graph={}
while True:
    print()
    print("1.addnode\n2.addedge\n3.printgraph\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        v=input("enter node")
        addnode(v)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        addedge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")
        
6.directed and unweighted using list:
def addnode(v):
    global n
    if v in graph:
        print(v,"node is existed")
    else:
        graph[v]=[]
def show():
    for x in graph:
        print(x,":",graph[x])
def addedge(node1,node2):
    if node1 not in graph:
        print(node1,"is not availabe in graph")
    elif node2 not in graph:
        print(node2," is not available in graph")
    else:
        graph[node1].append(node2)
        
graph={}
while True:
    print()
    print("1.addnode\n2.addedge\n3.printgraph\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        v=input("enter node")
        addnode(v)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        addedge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")
7.
directed and weighted using list:
def addnode(v):
    global n
    if v in graph:
        print(v,"node is existed")
    else:
        graph[v]=[]
def show():
    for x in graph:
        print(x,":",graph[x])
def addedge(node1,node2):
    if node1 not in graph:
        print(node1,"is not availabe in graph")
    elif node2 not in graph:
        print(node2," is not available in graph")
    else:
        tuple=(node2,w)
        graph[node1].append(tuple)
        
graph={}
while True:
    print()
    print("1.addnode\n2.addedge\n3.printgraph\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        v=input("enter node")
        addnode(v)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        w=int(input("enter weight)
        addedge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")
        